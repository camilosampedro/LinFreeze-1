#!/bin/bash -e
#
#   linfreeze - Utility to prevent permanent file changes.
#
#   Copyright (C) 2010 Ryan Peters <sloshy45 [--at--] sbcglobal [--dot--] net>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#   Additional permission under GNU GPL version 3 section 7
#
#   If you modify this Program, or any covered work, by linking or 
#   combining it with [name of library] (or a modified version of that library), 
#   containing parts covered by the terms of [name of library's license],
#   the licensors of this Program grant you additional permission to convey
#   the resulting work. {Corresponding Source for a non-source form of such
#   a combination shall include the source code for the parts of [name of library]
#   used as well as that of the covered work.}
#

# Constants
PROGNAME=linfreeze
NAMEPROPER=LinFreeze
VERSION=0.5.2
FROZNAME="/etc/.frozen"
STATNAME="/etc/.static"

# Functions

usage() {
echo "$NAMEPROPER $VERSION -- Utility to prevent permanent file changes."
echo ""
echo "WARNING: While in use, this program makes changes to /etc/fstab."
echo "Do not edit these files while a system is frozen, only before and after."
echo ""
echo "Usage:"
echo "$PROGNAME [options] [directory or user to freeze or unfreeze]"
echo
echo "Options:"
echo "-h	Display this help message and exit."
echo "-v	Display version information and exit."
echo ""
echo "-d	'Freeze' a directory to prevent permanent file changes."
echo "-f	'Freeze' a user account to prevent permanent file changes."
echo "-u	'Unfreeze' all directories and users."
echo "-c	Remove the temporary directories for a user account or directory."
}

ifroot() { # Checks if the current user is 'root', which is needed for this utility.
if [ "$(whoami)" != "root" ];
	then
		echo "You must be the 'root' user to use this utility."
		exit 1
fi
}

directory() { # Recursively freezes an individual folder
ifroot
DIRF=`echo "$OPTARG" | sed -e "s/\/*$//" ` # Removes the trailing slash of $OPTARG
if [ ! -d $DIRF ];
	then
		echo "Directory $OPTARG does not exist! Please enter an existing directory or create it with 'mkdir $OPTARG'."
		exit 1
fi
if [ -d $DIRF.dynamic ];
	then
		echo "This directory is already frozen! Unfreeze it with $PROGNAME -u."
		exit 1
fi
if [ ! -f /etc/.frozen ];
	then
		touch /etc/.frozen
fi
if [ ! -f /etc/fstab.thaw ];
	then
		cp /etc/fstab /etc/fstab.thaw
fi
mkdir $DIRF.dynamic
echo $DIRF.dynamic >> /etc/.frozen
echo tmpfs $DIRF.dynamic tmpfs defaults,noatime,uid=1000,gid=1000 0 0 >> /etc/fstab
if [ ! -d $DIRF.static ]
	then
		echo "Would you like to create a directory for temporary, 'frozen' files"
		echo -n "to be layed over the directory? [Y/n]: "
		read STATYES
		echo ""
fi
if [ -d $DIRF.static ];
	then
		touch /etc/.static
		echo $DIRF.static >> /etc/.static
		echo none $DIRF aufs br=$DIRF.dynamic=rw:$DIRF.static=ro:$DIRF=ro 0 0 >> /etc/fstab
		echo "Folder $DIRF is now frozen. Reboot your computer to not make any changes."
		echo ""
		echo "If you wish to put temporary files and/or folders in the static directory, please do so now by putting them in $DIRF.static."
		STATYES=N
fi
if [ "$STATYES" = "Y" -o "$STATYES" = "y" ]
	then
		mkdir $DIRF.static
		touch /etc/.static
		echo $DIRF.static >> /etc/.static
		echo none $DIRF aufs br=$DIRF.dynamic=rw:$DIRF.static=ro:$DIRF=ro 0 0 >> /etc/fstab
		echo "Folder $DIRF is now frozen. Reboot your computer to not make any changes."
		echo ""
		echo "If you wish to put temporary files and/or folders in the static directory, please do so now by putting them in $DIRF.static."
		echo ""
	else
		echo none $DIRF aufs br=$DIRF.dynamic=rw:$DIRF=ro 0 0 >> /etc/fstab
		echo "Folder $DIRF is now frozen. Reboot your computer to not make any changes."
		echo ""
fi
chowndir
if [ -d /home/$CHOWNUSER ];
	then
		chown $CHOWNUSER $DIRF.dynamic
		[ -d $DIRF.static ] && chown $CHOWNUSER $DIRF.static
		RETRY=N
	else
		echo -n "User $CHOWNUSER does not exist! Retry? [Y/n]: "
		read RETRY
		echo ""
fi
if [ "$RETRY" = "Y" -o "$RETRY" = "y" ];
	then
		chowndir
	else
		echo "Exiting..."
fi
}

chowndir() { # Changes ownership of temporary directories
ifroot
echo "Would you like to set the ownership of the dynamic and static directories?"
echo -n "This is necessary if the directory frozen was not in a home directory. [Y/n]: "
read CHOWNYES
echo ""
if [ "$CHOWNYES" = "Y" -o "$CHOWNYES" = "y" ];
	then
		echo -n "Which user would you like to own the temporary directories?"
		read CHOWNUSER
		echo ""
	else
		echo "Exiting..."
		exit 0
fi
}

user() { # This freezes the user account if the proper directories are in place.
ifroot
if [ ! -d /home/$OPTARG ];
	then
		echo "User account $OPTARG does not exist! Create it first."
		exit 1
fi
if [ ! -d /home/$OPTARG.dynamic ];
	then
		echo "Dynamic directory missing, beginning prep..."
		echo ""
		prep;
	else
		echo "User account $OPTARG is already frozen!"
		echo "Exiting..."
		exit 1
fi
if [ ! -d /home/$OPTARG.static ];
	then
		echo -n "Would you like to create a directory for temporary, 'frozen' files to be layed over the user directory? [Y/n]: "
		read STATIC
		echo ""
fi
if [ "$STATIC" = "y" -o "$STATIC" = "Y" ];
	then
		prep;
fi
if [ ! -f /etc/fstab.thaw ];
	then
		cp /etc/fstab /etc/fstab.thaw
fi
echo tmpfs /home/$OPTARG.dynamic tmpfs defaults,noatime,uid=1000,gid=1000 0 0 >> /etc/fstab
if [ -d /home/$OPTARG.static ];
	then
		echo /home/$OPTARG.static >> /etc/.static
		echo none /home/$OPTARG aufs br=/home/$OPTARG.dynamic=rw:/home/$OPTARG.static=ro:/home/$OPTARG=ro 0 0 >> /etc/fstab
		echo "User account $OPTARG is now 'frozen'. Reboot this computer and log in as that user to not make any permanent changes."
		echo ""
		echo "If you wish to put temporary files and/or folders in the static directory, please do so now by putting them in /home/$OPTARG.static."
	else
		echo none /home/$OPTARG aufs br=/home/$OPTARG.dynamic=rw:/home/$OPTARG=ro 0 0 >> /etc/fstab
		echo "User account $OPTARG is now 'frozen'. Reboot this computer and log in as that user to not make any permanent changes."
fi
}

prep() { # This prepares a user account for freezing.
ifroot
if [ ! -d /home/$OPTARG.dynamic ];
	then
		echo "Making dynamic directory at /home/$OPTARG.dynamic for temporary files..."
		echo ""
		mkdir /home/$OPTARG.dynamic
		chown $OPTARG /home/$OPTARG.dynamic
	else
		echo "Dynamic directory already present. Continuing..."
		echo ""
fi
if [ ! -d /home/$OPTARG.static ];
	then
		echo -n "Would you like to create a directory for temporary, 'frozen' files to be layed over the user directory at /home/$OPTARG.static? [Y/n]: "
		read STATYES
		echo ""
	else
		echo "Static directory already created. Continuing..."
		echo ""
fi
if [ "$STATYES" = "Y" -o "$STATYES" = "y" ];
	then
		mkdir /home/$OPTARG.static
		chown  $OPTARG /home/$OPTARG.static
fi
echo "Preparations complete!"
}

unfreeze() { # This unfreezes all user accounts and directories that are frozen.
ifroot
if [ -f /etc/fstab.thaw ];
	then
		echo -n "Would you like to 'unfreeze' all user accounts and directories? [Y/n]: "
		read UNFREEZE
		echo ""
	else
		echo "There are no 'frozen' users or directories." 
		echo "Freeze them with $PROGNAME [-f -d] [user account or directory]."
		exit 1
fi
if [ "$UNFREEZE" = "Y" -o "$UNFREEZE" = "y" ];
	then
		rm /etc/fstab
		mv /etc/fstab.thaw /etc/fstab
		YESH=NOSH
	else
		"Leaving system as-is."
		exit 0
fi
if [ -f /etc/.frozen ];
	then
		YESH=YESH
fi		
if [ -f /root/.rebooted -a -f /etc/.frozen ];
	then
		while read FROZDIR; do
		rm -rf $FROZDIR
		done < $FROZNAME
		sed -i '/.dynamic/ d' $FROZNAME
fi
if [ "$YESH" = "NOSH" ];
	then
		echo "All user accounts and/or directories have been 'un-frozen'."
		echo ""
		echo "First reboot your computer for the temporary 'dynamic' directories to be safely unmounted."
		echo ""
		echo "Then run $PROGNAME -c after rebooting to remove the temporary directories."
		echo ""
		echo "If you put any files in a 'static' directory, you may wish to move them back to its respective folder or elsewhere now."
		echo ""
		echo "To remove the 'static' directories, if any, use $PROGNAME -c [user or directory] after rebooting."
touch /root/.rebooted
fi
}

clean() { # Removes static directories for a user account.
ifroot
if [ -f /etc/fstab.thaw ];
	then
		echo "WARNING: Some users or directories are already frozen on this system."
		echo "Please 'un-freeze' ($PROGNAME -u) all users and directories first before cleaning 'static' directories."
		exit 1
fi
if [ -f /root/.rebooted ];
	then
		echo -n "Remove 'dynamic' directories for all users and folders? [Y/n]: "
		read REMDYN
		echo ""
	else
		REMDYN=N
fi
if [ "$REMDYN" = "Y" -o "$REMDYN" = "y" ];
	then
		rm -rf /home/*.dynamic
		while read FROZDIR; do
		rm -rf $FROZDIR
		done < $FROZNAME
		sed -i '/.dynamic/ d' $FROZNAME
fi
echo -n "Remove 'static' directories for all users? [Y/n]: "
read HERP
echo ""
if [ "$HERP" = "Y" -o "$HERP" = "y" ];
	then
		rm -rf /home/*.static
		echo "'Static' directories for users removed."
		echo ""
fi
if [ -f /etc/.static ];
	then
		echo -n "Remove 'static' directories for individual directories? [Y/n]: "
		read LAWL
		echo ""
	else
		LAWL=N
fi
if [ "$LAWL" = "Y" -o "$LAWL" = y ];
	then
		while read STATDIR; do
		rm -rf $STATDIR
		echo "Removed $STATDIR."
		done < $STATNAME
		sed -i '/.static/ d' $STATNAME
fi
echo "Cleanup complete!"
}

# parse command line arguments
if [ $# -le 1 ]; then
       usage;
       exit 0;
fi

while getopts hvd:f:uc OPT; do
    case "$OPT" in
	h)	usage;
		exit 0
		;;
	v)	echo "$NAMEPROPER version $VERSION"
		exit 0
		;;
	d)	directory;
		exit 0
		;;
	f)	user;
		exit 0	
		;;
	u)	unfreeze;
		exit 0
		;;
	c)	clean;
		exit 0
		;;
	*)	usage;
		exit 1
		;;
    esac
done

